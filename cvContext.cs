// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace WebApplication1.Models;

public partial class cvContext : DbContext
{
    public cvContext(DbContextOptions<cvContext> options)
        : base(options)
    {
    }

    public virtual DbSet<EmailHistory> EmailHistories { get; set; }

    public virtual DbSet<Message> Messages { get; set; }

    public virtual DbSet<UserRegistration> UserRegistrations { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<EmailHistory>(entity =>
        {
            entity.HasKey(e => e.EntryId);

            entity.ToTable("emailHistory");

            entity.Property(e => e.EntryId)
                .ValueGeneratedNever()
                .HasColumnName("entryId");
            entity.Property(e => e.Body)
                .IsRequired()
                .HasColumnName("body");
            entity.Property(e => e.CreatedDateTime)
                .HasColumnType("datetime")
                .HasColumnName("createdDateTime");
            entity.Property(e => e.IsSuccessful).HasColumnName("isSuccessful");
            entity.Property(e => e.RecipientEmail)
                .IsRequired()
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("recipientEmail");
            entity.Property(e => e.Sender)
                .IsRequired()
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("sender");
            entity.Property(e => e.Subject)
                .IsRequired()
                .HasColumnName("subject");
        });

        modelBuilder.Entity<Message>(entity =>
        {
            entity.HasKey(e => e.MessesageId);

            entity.ToTable("messages");

            entity.Property(e => e.MessesageId)
                .HasDefaultValueSql("(newid())")
                .HasColumnName("messesageId");
            entity.Property(e => e.CreatedDateTime).HasColumnName("createdDateTime");
            entity.Property(e => e.Email)
                .IsRequired()
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("email");
            entity.Property(e => e.Message1)
                .IsRequired()
                .HasColumnName("message");
            entity.Property(e => e.PersonName)
                .IsRequired()
                .HasMaxLength(30)
                .IsFixedLength()
                .HasColumnName("personName");
        });

        modelBuilder.Entity<UserRegistration>(entity =>
        {
            entity.HasKey(e => e.UserId);

            entity.ToTable("userRegistration");

            entity.Property(e => e.UserId)
                .ValueGeneratedNever()
                .HasColumnName("userId");
            entity.Property(e => e.EmailAddress)
                .IsRequired()
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("emailAddress");
            entity.Property(e => e.FirstName)
                .IsRequired()
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("firstName");
            entity.Property(e => e.LastName)
                .IsRequired()
                .HasMaxLength(50)
                .IsFixedLength()
                .HasColumnName("lastName");
            entity.Property(e => e.Password)
                .IsRequired()
                .HasColumnName("password");
            entity.Property(e => e.Username)
                .IsRequired()
                .HasColumnName("username");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}